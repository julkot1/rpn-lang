// Code generated from Stc.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type StcLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var StcLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func stclexerLexerInit() {
	staticData := &StcLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'fun'", "'{'", "'}'", "'if'", "'else'", "'repeat'", "'dup'", "'rot'",
		"'swap'", "'pop'", "'over'", "':'", "'!'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "STACK_PREVENTION",
		"NUMBER", "SIGNED_NUMBER", "FLOAT", "SIGNED_FLOAT", "FLOAT_E", "SIGNED_FLOAT_E",
		"BIN_NUMBER", "HEX_NUMBER", "STRING", "CHAR", "BOOL", "SIMPLE_TYPE",
		"LOGIC_OPERATOR", "ARITHMETIC_OPERATOR", "BUILD_IN_OPERATOR", "ID",
		"WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "STACK_PREVENTION", "NUMBER", "SIGNED_NUMBER",
		"FLOAT", "SIGNED_FLOAT", "FLOAT_E", "SIGNED_FLOAT_E", "DIGIT", "BIN_NUMBER",
		"HEX_NUMBER", "STRING", "CHAR", "BOOL", "ESC", "SIMPLE_TYPE", "LOGIC_OPERATOR",
		"ARITHMETIC_OPERATOR", "BUILD_IN_OPERATOR", "ID", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 30, 304, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3,
		1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8,
		1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 4, 13, 116, 8, 13, 11, 13, 12, 13, 117,
		1, 14, 1, 14, 4, 14, 122, 8, 14, 11, 14, 12, 14, 123, 1, 15, 4, 15, 127,
		8, 15, 11, 15, 12, 15, 128, 1, 15, 1, 15, 4, 15, 133, 8, 15, 11, 15, 12,
		15, 134, 1, 16, 1, 16, 4, 16, 139, 8, 16, 11, 16, 12, 16, 140, 1, 16, 1,
		16, 4, 16, 145, 8, 16, 11, 16, 12, 16, 146, 1, 17, 4, 17, 150, 8, 17, 11,
		17, 12, 17, 151, 1, 17, 1, 17, 4, 17, 156, 8, 17, 11, 17, 12, 17, 157,
		3, 17, 160, 8, 17, 1, 17, 1, 17, 3, 17, 164, 8, 17, 1, 17, 4, 17, 167,
		8, 17, 11, 17, 12, 17, 168, 1, 18, 1, 18, 4, 18, 173, 8, 18, 11, 18, 12,
		18, 174, 1, 18, 1, 18, 4, 18, 179, 8, 18, 11, 18, 12, 18, 180, 3, 18, 183,
		8, 18, 1, 18, 1, 18, 3, 18, 187, 8, 18, 1, 18, 4, 18, 190, 8, 18, 11, 18,
		12, 18, 191, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 4, 20, 199, 8, 20, 11,
		20, 12, 20, 200, 1, 21, 1, 21, 1, 21, 4, 21, 206, 8, 21, 11, 21, 12, 21,
		207, 1, 22, 1, 22, 1, 22, 5, 22, 213, 8, 22, 10, 22, 12, 22, 216, 9, 22,
		1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 3, 23, 223, 8, 23, 1, 23, 1, 23, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 3, 24, 236,
		8, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1,
		26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		3, 26, 258, 8, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 3, 27,
		277, 8, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 29, 3, 29, 289, 8, 29, 1, 30, 1, 30, 5, 30, 293, 8, 30, 10, 30,
		12, 30, 296, 9, 30, 1, 31, 4, 31, 299, 8, 31, 11, 31, 12, 31, 300, 1, 31,
		1, 31, 0, 0, 32, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 0, 41, 20, 43, 21, 45, 22, 47, 23, 49, 24, 51, 0, 53, 25,
		55, 26, 57, 27, 59, 28, 61, 29, 63, 30, 1, 0, 15, 2, 0, 43, 43, 45, 45,
		2, 0, 69, 69, 101, 101, 1, 0, 48, 57, 2, 0, 66, 66, 98, 98, 1, 0, 48, 49,
		2, 0, 88, 88, 120, 120, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 34, 34, 92,
		92, 2, 0, 39, 39, 92, 92, 8, 0, 34, 34, 39, 39, 92, 92, 98, 98, 102, 102,
		110, 110, 114, 114, 116, 116, 2, 0, 60, 60, 62, 62, 4, 0, 37, 37, 42, 43,
		45, 45, 47, 47, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95,
		95, 97, 122, 3, 0, 9, 10, 13, 13, 32, 32, 337, 0, 1, 1, 0, 0, 0, 0, 3,
		1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11,
		1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0,
		19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0,
		0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0,
		0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 53, 1,
		0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61,
		1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 1, 65, 1, 0, 0, 0, 3, 69, 1, 0, 0, 0, 5,
		71, 1, 0, 0, 0, 7, 73, 1, 0, 0, 0, 9, 76, 1, 0, 0, 0, 11, 81, 1, 0, 0,
		0, 13, 88, 1, 0, 0, 0, 15, 92, 1, 0, 0, 0, 17, 96, 1, 0, 0, 0, 19, 101,
		1, 0, 0, 0, 21, 105, 1, 0, 0, 0, 23, 110, 1, 0, 0, 0, 25, 112, 1, 0, 0,
		0, 27, 115, 1, 0, 0, 0, 29, 119, 1, 0, 0, 0, 31, 126, 1, 0, 0, 0, 33, 136,
		1, 0, 0, 0, 35, 149, 1, 0, 0, 0, 37, 170, 1, 0, 0, 0, 39, 193, 1, 0, 0,
		0, 41, 195, 1, 0, 0, 0, 43, 202, 1, 0, 0, 0, 45, 209, 1, 0, 0, 0, 47, 219,
		1, 0, 0, 0, 49, 235, 1, 0, 0, 0, 51, 237, 1, 0, 0, 0, 53, 257, 1, 0, 0,
		0, 55, 276, 1, 0, 0, 0, 57, 278, 1, 0, 0, 0, 59, 288, 1, 0, 0, 0, 61, 290,
		1, 0, 0, 0, 63, 298, 1, 0, 0, 0, 65, 66, 5, 102, 0, 0, 66, 67, 5, 117,
		0, 0, 67, 68, 5, 110, 0, 0, 68, 2, 1, 0, 0, 0, 69, 70, 5, 123, 0, 0, 70,
		4, 1, 0, 0, 0, 71, 72, 5, 125, 0, 0, 72, 6, 1, 0, 0, 0, 73, 74, 5, 105,
		0, 0, 74, 75, 5, 102, 0, 0, 75, 8, 1, 0, 0, 0, 76, 77, 5, 101, 0, 0, 77,
		78, 5, 108, 0, 0, 78, 79, 5, 115, 0, 0, 79, 80, 5, 101, 0, 0, 80, 10, 1,
		0, 0, 0, 81, 82, 5, 114, 0, 0, 82, 83, 5, 101, 0, 0, 83, 84, 5, 112, 0,
		0, 84, 85, 5, 101, 0, 0, 85, 86, 5, 97, 0, 0, 86, 87, 5, 116, 0, 0, 87,
		12, 1, 0, 0, 0, 88, 89, 5, 100, 0, 0, 89, 90, 5, 117, 0, 0, 90, 91, 5,
		112, 0, 0, 91, 14, 1, 0, 0, 0, 92, 93, 5, 114, 0, 0, 93, 94, 5, 111, 0,
		0, 94, 95, 5, 116, 0, 0, 95, 16, 1, 0, 0, 0, 96, 97, 5, 115, 0, 0, 97,
		98, 5, 119, 0, 0, 98, 99, 5, 97, 0, 0, 99, 100, 5, 112, 0, 0, 100, 18,
		1, 0, 0, 0, 101, 102, 5, 112, 0, 0, 102, 103, 5, 111, 0, 0, 103, 104, 5,
		112, 0, 0, 104, 20, 1, 0, 0, 0, 105, 106, 5, 111, 0, 0, 106, 107, 5, 118,
		0, 0, 107, 108, 5, 101, 0, 0, 108, 109, 5, 114, 0, 0, 109, 22, 1, 0, 0,
		0, 110, 111, 5, 58, 0, 0, 111, 24, 1, 0, 0, 0, 112, 113, 5, 33, 0, 0, 113,
		26, 1, 0, 0, 0, 114, 116, 3, 39, 19, 0, 115, 114, 1, 0, 0, 0, 116, 117,
		1, 0, 0, 0, 117, 115, 1, 0, 0, 0, 117, 118, 1, 0, 0, 0, 118, 28, 1, 0,
		0, 0, 119, 121, 7, 0, 0, 0, 120, 122, 3, 39, 19, 0, 121, 120, 1, 0, 0,
		0, 122, 123, 1, 0, 0, 0, 123, 121, 1, 0, 0, 0, 123, 124, 1, 0, 0, 0, 124,
		30, 1, 0, 0, 0, 125, 127, 3, 39, 19, 0, 126, 125, 1, 0, 0, 0, 127, 128,
		1, 0, 0, 0, 128, 126, 1, 0, 0, 0, 128, 129, 1, 0, 0, 0, 129, 130, 1, 0,
		0, 0, 130, 132, 5, 46, 0, 0, 131, 133, 3, 39, 19, 0, 132, 131, 1, 0, 0,
		0, 133, 134, 1, 0, 0, 0, 134, 132, 1, 0, 0, 0, 134, 135, 1, 0, 0, 0, 135,
		32, 1, 0, 0, 0, 136, 138, 7, 0, 0, 0, 137, 139, 3, 39, 19, 0, 138, 137,
		1, 0, 0, 0, 139, 140, 1, 0, 0, 0, 140, 138, 1, 0, 0, 0, 140, 141, 1, 0,
		0, 0, 141, 142, 1, 0, 0, 0, 142, 144, 5, 46, 0, 0, 143, 145, 3, 39, 19,
		0, 144, 143, 1, 0, 0, 0, 145, 146, 1, 0, 0, 0, 146, 144, 1, 0, 0, 0, 146,
		147, 1, 0, 0, 0, 147, 34, 1, 0, 0, 0, 148, 150, 3, 39, 19, 0, 149, 148,
		1, 0, 0, 0, 150, 151, 1, 0, 0, 0, 151, 149, 1, 0, 0, 0, 151, 152, 1, 0,
		0, 0, 152, 159, 1, 0, 0, 0, 153, 155, 5, 46, 0, 0, 154, 156, 3, 39, 19,
		0, 155, 154, 1, 0, 0, 0, 156, 157, 1, 0, 0, 0, 157, 155, 1, 0, 0, 0, 157,
		158, 1, 0, 0, 0, 158, 160, 1, 0, 0, 0, 159, 153, 1, 0, 0, 0, 159, 160,
		1, 0, 0, 0, 160, 161, 1, 0, 0, 0, 161, 163, 7, 1, 0, 0, 162, 164, 7, 0,
		0, 0, 163, 162, 1, 0, 0, 0, 163, 164, 1, 0, 0, 0, 164, 166, 1, 0, 0, 0,
		165, 167, 3, 39, 19, 0, 166, 165, 1, 0, 0, 0, 167, 168, 1, 0, 0, 0, 168,
		166, 1, 0, 0, 0, 168, 169, 1, 0, 0, 0, 169, 36, 1, 0, 0, 0, 170, 172, 7,
		0, 0, 0, 171, 173, 3, 39, 19, 0, 172, 171, 1, 0, 0, 0, 173, 174, 1, 0,
		0, 0, 174, 172, 1, 0, 0, 0, 174, 175, 1, 0, 0, 0, 175, 182, 1, 0, 0, 0,
		176, 178, 5, 46, 0, 0, 177, 179, 3, 39, 19, 0, 178, 177, 1, 0, 0, 0, 179,
		180, 1, 0, 0, 0, 180, 178, 1, 0, 0, 0, 180, 181, 1, 0, 0, 0, 181, 183,
		1, 0, 0, 0, 182, 176, 1, 0, 0, 0, 182, 183, 1, 0, 0, 0, 183, 184, 1, 0,
		0, 0, 184, 186, 7, 1, 0, 0, 185, 187, 7, 0, 0, 0, 186, 185, 1, 0, 0, 0,
		186, 187, 1, 0, 0, 0, 187, 189, 1, 0, 0, 0, 188, 190, 3, 39, 19, 0, 189,
		188, 1, 0, 0, 0, 190, 191, 1, 0, 0, 0, 191, 189, 1, 0, 0, 0, 191, 192,
		1, 0, 0, 0, 192, 38, 1, 0, 0, 0, 193, 194, 7, 2, 0, 0, 194, 40, 1, 0, 0,
		0, 195, 196, 5, 48, 0, 0, 196, 198, 7, 3, 0, 0, 197, 199, 7, 4, 0, 0, 198,
		197, 1, 0, 0, 0, 199, 200, 1, 0, 0, 0, 200, 198, 1, 0, 0, 0, 200, 201,
		1, 0, 0, 0, 201, 42, 1, 0, 0, 0, 202, 203, 5, 48, 0, 0, 203, 205, 7, 5,
		0, 0, 204, 206, 7, 6, 0, 0, 205, 204, 1, 0, 0, 0, 206, 207, 1, 0, 0, 0,
		207, 205, 1, 0, 0, 0, 207, 208, 1, 0, 0, 0, 208, 44, 1, 0, 0, 0, 209, 214,
		5, 34, 0, 0, 210, 213, 3, 51, 25, 0, 211, 213, 8, 7, 0, 0, 212, 210, 1,
		0, 0, 0, 212, 211, 1, 0, 0, 0, 213, 216, 1, 0, 0, 0, 214, 212, 1, 0, 0,
		0, 214, 215, 1, 0, 0, 0, 215, 217, 1, 0, 0, 0, 216, 214, 1, 0, 0, 0, 217,
		218, 5, 34, 0, 0, 218, 46, 1, 0, 0, 0, 219, 222, 5, 39, 0, 0, 220, 223,
		3, 51, 25, 0, 221, 223, 8, 8, 0, 0, 222, 220, 1, 0, 0, 0, 222, 221, 1,
		0, 0, 0, 223, 224, 1, 0, 0, 0, 224, 225, 5, 39, 0, 0, 225, 48, 1, 0, 0,
		0, 226, 227, 5, 116, 0, 0, 227, 228, 5, 114, 0, 0, 228, 229, 5, 117, 0,
		0, 229, 236, 5, 101, 0, 0, 230, 231, 5, 102, 0, 0, 231, 232, 5, 97, 0,
		0, 232, 233, 5, 108, 0, 0, 233, 234, 5, 115, 0, 0, 234, 236, 5, 101, 0,
		0, 235, 226, 1, 0, 0, 0, 235, 230, 1, 0, 0, 0, 236, 50, 1, 0, 0, 0, 237,
		238, 5, 92, 0, 0, 238, 239, 7, 9, 0, 0, 239, 52, 1, 0, 0, 0, 240, 241,
		5, 73, 0, 0, 241, 242, 5, 54, 0, 0, 242, 258, 5, 52, 0, 0, 243, 244, 5,
		73, 0, 0, 244, 258, 5, 56, 0, 0, 245, 246, 5, 83, 0, 0, 246, 247, 5, 116,
		0, 0, 247, 258, 5, 114, 0, 0, 248, 249, 5, 70, 0, 0, 249, 250, 5, 108,
		0, 0, 250, 251, 5, 111, 0, 0, 251, 252, 5, 97, 0, 0, 252, 258, 5, 116,
		0, 0, 253, 254, 5, 66, 0, 0, 254, 255, 5, 111, 0, 0, 255, 256, 5, 111,
		0, 0, 256, 258, 5, 108, 0, 0, 257, 240, 1, 0, 0, 0, 257, 243, 1, 0, 0,
		0, 257, 245, 1, 0, 0, 0, 257, 248, 1, 0, 0, 0, 257, 253, 1, 0, 0, 0, 258,
		54, 1, 0, 0, 0, 259, 260, 5, 60, 0, 0, 260, 277, 5, 61, 0, 0, 261, 262,
		5, 62, 0, 0, 262, 277, 5, 61, 0, 0, 263, 264, 5, 33, 0, 0, 264, 277, 5,
		61, 0, 0, 265, 266, 5, 61, 0, 0, 266, 277, 5, 61, 0, 0, 267, 277, 7, 10,
		0, 0, 268, 269, 5, 97, 0, 0, 269, 270, 5, 110, 0, 0, 270, 277, 5, 100,
		0, 0, 271, 272, 5, 111, 0, 0, 272, 277, 5, 114, 0, 0, 273, 274, 5, 110,
		0, 0, 274, 275, 5, 111, 0, 0, 275, 277, 5, 116, 0, 0, 276, 259, 1, 0, 0,
		0, 276, 261, 1, 0, 0, 0, 276, 263, 1, 0, 0, 0, 276, 265, 1, 0, 0, 0, 276,
		267, 1, 0, 0, 0, 276, 268, 1, 0, 0, 0, 276, 271, 1, 0, 0, 0, 276, 273,
		1, 0, 0, 0, 277, 56, 1, 0, 0, 0, 278, 279, 7, 11, 0, 0, 279, 58, 1, 0,
		0, 0, 280, 281, 5, 116, 0, 0, 281, 282, 5, 121, 0, 0, 282, 283, 5, 112,
		0, 0, 283, 284, 5, 101, 0, 0, 284, 285, 5, 111, 0, 0, 285, 289, 5, 102,
		0, 0, 286, 287, 5, 58, 0, 0, 287, 289, 5, 61, 0, 0, 288, 280, 1, 0, 0,
		0, 288, 286, 1, 0, 0, 0, 289, 60, 1, 0, 0, 0, 290, 294, 7, 12, 0, 0, 291,
		293, 7, 13, 0, 0, 292, 291, 1, 0, 0, 0, 293, 296, 1, 0, 0, 0, 294, 292,
		1, 0, 0, 0, 294, 295, 1, 0, 0, 0, 295, 62, 1, 0, 0, 0, 296, 294, 1, 0,
		0, 0, 297, 299, 7, 14, 0, 0, 298, 297, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0,
		300, 298, 1, 0, 0, 0, 300, 301, 1, 0, 0, 0, 301, 302, 1, 0, 0, 0, 302,
		303, 6, 31, 0, 0, 303, 64, 1, 0, 0, 0, 28, 0, 117, 123, 128, 134, 140,
		146, 151, 157, 159, 163, 168, 174, 180, 182, 186, 191, 200, 207, 212, 214,
		222, 235, 257, 276, 288, 294, 300, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// StcLexerInit initializes any static state used to implement StcLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewStcLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func StcLexerInit() {
	staticData := &StcLexerLexerStaticData
	staticData.once.Do(stclexerLexerInit)
}

// NewStcLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewStcLexer(input antlr.CharStream) *StcLexer {
	StcLexerInit()
	l := new(StcLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &StcLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Stc.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// StcLexer tokens.
const (
	StcLexerT__0                = 1
	StcLexerT__1                = 2
	StcLexerT__2                = 3
	StcLexerT__3                = 4
	StcLexerT__4                = 5
	StcLexerT__5                = 6
	StcLexerT__6                = 7
	StcLexerT__7                = 8
	StcLexerT__8                = 9
	StcLexerT__9                = 10
	StcLexerT__10               = 11
	StcLexerT__11               = 12
	StcLexerSTACK_PREVENTION    = 13
	StcLexerNUMBER              = 14
	StcLexerSIGNED_NUMBER       = 15
	StcLexerFLOAT               = 16
	StcLexerSIGNED_FLOAT        = 17
	StcLexerFLOAT_E             = 18
	StcLexerSIGNED_FLOAT_E      = 19
	StcLexerBIN_NUMBER          = 20
	StcLexerHEX_NUMBER          = 21
	StcLexerSTRING              = 22
	StcLexerCHAR                = 23
	StcLexerBOOL                = 24
	StcLexerSIMPLE_TYPE         = 25
	StcLexerLOGIC_OPERATOR      = 26
	StcLexerARITHMETIC_OPERATOR = 27
	StcLexerBUILD_IN_OPERATOR   = 28
	StcLexerID                  = 29
	StcLexerWS                  = 30
)
