// Code generated from Stc.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type StcLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var StcLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func stclexerLexerInit() {
	staticData := &StcLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'fun'", "'{'", "'}'", "'if'", "'else'", "'repeat'", "'('", "')'",
		"'dup'", "'rot'", "'swap'", "'pop'", "'over'", "'c:'", "':'", "'!'",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "':='", "'&'",
		"", "'['", "']'", "'arr'", "'@'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "STACK_PREVENTION",
		"NUMBER", "SIGNED_NUMBER", "FLOAT", "SIGNED_FLOAT", "FLOAT_E", "SIGNED_FLOAT_E",
		"BIN_NUMBER", "HEX_NUMBER", "STRING", "CHAR", "BOOL", "SIMPLE_TYPE",
		"LOGIC_OPERATOR", "ARITHMETIC_OPERATOR", "ASSIGN_OPERATOR", "REFERENCE_OPERATOR",
		"BUILD_IN_OPERATOR", "ARRAY_OPEN", "ARRAY_CLOSE", "ARRAY_OPERATOR",
		"AT", "ID", "WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "STACK_PREVENTION",
		"NUMBER", "SIGNED_NUMBER", "FLOAT", "SIGNED_FLOAT", "FLOAT_E", "SIGNED_FLOAT_E",
		"DIGIT", "BIN_NUMBER", "HEX_NUMBER", "STRING", "CHAR", "BOOL", "ESC",
		"SIMPLE_TYPE", "LOGIC_OPERATOR", "ARITHMETIC_OPERATOR", "ASSIGN_OPERATOR",
		"REFERENCE_OPERATOR", "BUILD_IN_OPERATOR", "ARRAY_OPEN", "ARRAY_CLOSE",
		"ARRAY_OPERATOR", "AT", "ID", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 39, 354, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 1, 0, 1,
		0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1,
		4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1,
		7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 4, 16,
		141, 8, 16, 11, 16, 12, 16, 142, 1, 17, 1, 17, 4, 17, 147, 8, 17, 11, 17,
		12, 17, 148, 1, 18, 4, 18, 152, 8, 18, 11, 18, 12, 18, 153, 1, 18, 1, 18,
		4, 18, 158, 8, 18, 11, 18, 12, 18, 159, 1, 19, 1, 19, 4, 19, 164, 8, 19,
		11, 19, 12, 19, 165, 1, 19, 1, 19, 4, 19, 170, 8, 19, 11, 19, 12, 19, 171,
		1, 20, 4, 20, 175, 8, 20, 11, 20, 12, 20, 176, 1, 20, 1, 20, 4, 20, 181,
		8, 20, 11, 20, 12, 20, 182, 3, 20, 185, 8, 20, 1, 20, 1, 20, 3, 20, 189,
		8, 20, 1, 20, 4, 20, 192, 8, 20, 11, 20, 12, 20, 193, 1, 21, 1, 21, 4,
		21, 198, 8, 21, 11, 21, 12, 21, 199, 1, 21, 1, 21, 4, 21, 204, 8, 21, 11,
		21, 12, 21, 205, 3, 21, 208, 8, 21, 1, 21, 1, 21, 3, 21, 212, 8, 21, 1,
		21, 4, 21, 215, 8, 21, 11, 21, 12, 21, 216, 1, 22, 1, 22, 1, 23, 1, 23,
		1, 23, 4, 23, 224, 8, 23, 11, 23, 12, 23, 225, 1, 24, 1, 24, 1, 24, 4,
		24, 231, 8, 24, 11, 24, 12, 24, 232, 1, 25, 1, 25, 1, 25, 5, 25, 238, 8,
		25, 10, 25, 12, 25, 241, 9, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 3, 26,
		248, 8, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 27, 1, 27, 3, 27, 261, 8, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29,
		1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 29, 1, 29, 3, 29, 283, 8, 29, 1, 30, 1, 30, 1, 30,
		1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 30, 3, 30, 302, 8, 30, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		3, 34, 329, 8, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1,
		37, 1, 38, 1, 38, 1, 39, 1, 39, 5, 39, 343, 8, 39, 10, 39, 12, 39, 346,
		9, 39, 1, 40, 4, 40, 349, 8, 40, 11, 40, 12, 40, 350, 1, 40, 1, 40, 0,
		0, 41, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10,
		21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19,
		39, 20, 41, 21, 43, 22, 45, 0, 47, 23, 49, 24, 51, 25, 53, 26, 55, 27,
		57, 0, 59, 28, 61, 29, 63, 30, 65, 31, 67, 32, 69, 33, 71, 34, 73, 35,
		75, 36, 77, 37, 79, 38, 81, 39, 1, 0, 15, 2, 0, 43, 43, 45, 45, 2, 0, 69,
		69, 101, 101, 1, 0, 48, 57, 2, 0, 66, 66, 98, 98, 1, 0, 48, 49, 2, 0, 88,
		88, 120, 120, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 34, 34, 92, 92, 2, 0,
		39, 39, 92, 92, 8, 0, 34, 34, 39, 39, 92, 92, 98, 98, 102, 102, 110, 110,
		114, 114, 116, 116, 2, 0, 60, 60, 62, 62, 4, 0, 37, 37, 42, 43, 45, 45,
		47, 47, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97,
		122, 3, 0, 9, 10, 13, 13, 32, 32, 390, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
		0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35,
		1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0,
		43, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0,
		0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
		0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0,
		0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1,
		0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 1, 83, 1, 0, 0, 0, 3, 87,
		1, 0, 0, 0, 5, 89, 1, 0, 0, 0, 7, 91, 1, 0, 0, 0, 9, 94, 1, 0, 0, 0, 11,
		99, 1, 0, 0, 0, 13, 106, 1, 0, 0, 0, 15, 108, 1, 0, 0, 0, 17, 110, 1, 0,
		0, 0, 19, 114, 1, 0, 0, 0, 21, 118, 1, 0, 0, 0, 23, 123, 1, 0, 0, 0, 25,
		127, 1, 0, 0, 0, 27, 132, 1, 0, 0, 0, 29, 135, 1, 0, 0, 0, 31, 137, 1,
		0, 0, 0, 33, 140, 1, 0, 0, 0, 35, 144, 1, 0, 0, 0, 37, 151, 1, 0, 0, 0,
		39, 161, 1, 0, 0, 0, 41, 174, 1, 0, 0, 0, 43, 195, 1, 0, 0, 0, 45, 218,
		1, 0, 0, 0, 47, 220, 1, 0, 0, 0, 49, 227, 1, 0, 0, 0, 51, 234, 1, 0, 0,
		0, 53, 244, 1, 0, 0, 0, 55, 260, 1, 0, 0, 0, 57, 262, 1, 0, 0, 0, 59, 282,
		1, 0, 0, 0, 61, 301, 1, 0, 0, 0, 63, 303, 1, 0, 0, 0, 65, 305, 1, 0, 0,
		0, 67, 308, 1, 0, 0, 0, 69, 328, 1, 0, 0, 0, 71, 330, 1, 0, 0, 0, 73, 332,
		1, 0, 0, 0, 75, 334, 1, 0, 0, 0, 77, 338, 1, 0, 0, 0, 79, 340, 1, 0, 0,
		0, 81, 348, 1, 0, 0, 0, 83, 84, 5, 102, 0, 0, 84, 85, 5, 117, 0, 0, 85,
		86, 5, 110, 0, 0, 86, 2, 1, 0, 0, 0, 87, 88, 5, 123, 0, 0, 88, 4, 1, 0,
		0, 0, 89, 90, 5, 125, 0, 0, 90, 6, 1, 0, 0, 0, 91, 92, 5, 105, 0, 0, 92,
		93, 5, 102, 0, 0, 93, 8, 1, 0, 0, 0, 94, 95, 5, 101, 0, 0, 95, 96, 5, 108,
		0, 0, 96, 97, 5, 115, 0, 0, 97, 98, 5, 101, 0, 0, 98, 10, 1, 0, 0, 0, 99,
		100, 5, 114, 0, 0, 100, 101, 5, 101, 0, 0, 101, 102, 5, 112, 0, 0, 102,
		103, 5, 101, 0, 0, 103, 104, 5, 97, 0, 0, 104, 105, 5, 116, 0, 0, 105,
		12, 1, 0, 0, 0, 106, 107, 5, 40, 0, 0, 107, 14, 1, 0, 0, 0, 108, 109, 5,
		41, 0, 0, 109, 16, 1, 0, 0, 0, 110, 111, 5, 100, 0, 0, 111, 112, 5, 117,
		0, 0, 112, 113, 5, 112, 0, 0, 113, 18, 1, 0, 0, 0, 114, 115, 5, 114, 0,
		0, 115, 116, 5, 111, 0, 0, 116, 117, 5, 116, 0, 0, 117, 20, 1, 0, 0, 0,
		118, 119, 5, 115, 0, 0, 119, 120, 5, 119, 0, 0, 120, 121, 5, 97, 0, 0,
		121, 122, 5, 112, 0, 0, 122, 22, 1, 0, 0, 0, 123, 124, 5, 112, 0, 0, 124,
		125, 5, 111, 0, 0, 125, 126, 5, 112, 0, 0, 126, 24, 1, 0, 0, 0, 127, 128,
		5, 111, 0, 0, 128, 129, 5, 118, 0, 0, 129, 130, 5, 101, 0, 0, 130, 131,
		5, 114, 0, 0, 131, 26, 1, 0, 0, 0, 132, 133, 5, 99, 0, 0, 133, 134, 5,
		58, 0, 0, 134, 28, 1, 0, 0, 0, 135, 136, 5, 58, 0, 0, 136, 30, 1, 0, 0,
		0, 137, 138, 5, 33, 0, 0, 138, 32, 1, 0, 0, 0, 139, 141, 3, 45, 22, 0,
		140, 139, 1, 0, 0, 0, 141, 142, 1, 0, 0, 0, 142, 140, 1, 0, 0, 0, 142,
		143, 1, 0, 0, 0, 143, 34, 1, 0, 0, 0, 144, 146, 7, 0, 0, 0, 145, 147, 3,
		45, 22, 0, 146, 145, 1, 0, 0, 0, 147, 148, 1, 0, 0, 0, 148, 146, 1, 0,
		0, 0, 148, 149, 1, 0, 0, 0, 149, 36, 1, 0, 0, 0, 150, 152, 3, 45, 22, 0,
		151, 150, 1, 0, 0, 0, 152, 153, 1, 0, 0, 0, 153, 151, 1, 0, 0, 0, 153,
		154, 1, 0, 0, 0, 154, 155, 1, 0, 0, 0, 155, 157, 5, 46, 0, 0, 156, 158,
		3, 45, 22, 0, 157, 156, 1, 0, 0, 0, 158, 159, 1, 0, 0, 0, 159, 157, 1,
		0, 0, 0, 159, 160, 1, 0, 0, 0, 160, 38, 1, 0, 0, 0, 161, 163, 7, 0, 0,
		0, 162, 164, 3, 45, 22, 0, 163, 162, 1, 0, 0, 0, 164, 165, 1, 0, 0, 0,
		165, 163, 1, 0, 0, 0, 165, 166, 1, 0, 0, 0, 166, 167, 1, 0, 0, 0, 167,
		169, 5, 46, 0, 0, 168, 170, 3, 45, 22, 0, 169, 168, 1, 0, 0, 0, 170, 171,
		1, 0, 0, 0, 171, 169, 1, 0, 0, 0, 171, 172, 1, 0, 0, 0, 172, 40, 1, 0,
		0, 0, 173, 175, 3, 45, 22, 0, 174, 173, 1, 0, 0, 0, 175, 176, 1, 0, 0,
		0, 176, 174, 1, 0, 0, 0, 176, 177, 1, 0, 0, 0, 177, 184, 1, 0, 0, 0, 178,
		180, 5, 46, 0, 0, 179, 181, 3, 45, 22, 0, 180, 179, 1, 0, 0, 0, 181, 182,
		1, 0, 0, 0, 182, 180, 1, 0, 0, 0, 182, 183, 1, 0, 0, 0, 183, 185, 1, 0,
		0, 0, 184, 178, 1, 0, 0, 0, 184, 185, 1, 0, 0, 0, 185, 186, 1, 0, 0, 0,
		186, 188, 7, 1, 0, 0, 187, 189, 7, 0, 0, 0, 188, 187, 1, 0, 0, 0, 188,
		189, 1, 0, 0, 0, 189, 191, 1, 0, 0, 0, 190, 192, 3, 45, 22, 0, 191, 190,
		1, 0, 0, 0, 192, 193, 1, 0, 0, 0, 193, 191, 1, 0, 0, 0, 193, 194, 1, 0,
		0, 0, 194, 42, 1, 0, 0, 0, 195, 197, 7, 0, 0, 0, 196, 198, 3, 45, 22, 0,
		197, 196, 1, 0, 0, 0, 198, 199, 1, 0, 0, 0, 199, 197, 1, 0, 0, 0, 199,
		200, 1, 0, 0, 0, 200, 207, 1, 0, 0, 0, 201, 203, 5, 46, 0, 0, 202, 204,
		3, 45, 22, 0, 203, 202, 1, 0, 0, 0, 204, 205, 1, 0, 0, 0, 205, 203, 1,
		0, 0, 0, 205, 206, 1, 0, 0, 0, 206, 208, 1, 0, 0, 0, 207, 201, 1, 0, 0,
		0, 207, 208, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209, 211, 7, 1, 0, 0, 210,
		212, 7, 0, 0, 0, 211, 210, 1, 0, 0, 0, 211, 212, 1, 0, 0, 0, 212, 214,
		1, 0, 0, 0, 213, 215, 3, 45, 22, 0, 214, 213, 1, 0, 0, 0, 215, 216, 1,
		0, 0, 0, 216, 214, 1, 0, 0, 0, 216, 217, 1, 0, 0, 0, 217, 44, 1, 0, 0,
		0, 218, 219, 7, 2, 0, 0, 219, 46, 1, 0, 0, 0, 220, 221, 5, 48, 0, 0, 221,
		223, 7, 3, 0, 0, 222, 224, 7, 4, 0, 0, 223, 222, 1, 0, 0, 0, 224, 225,
		1, 0, 0, 0, 225, 223, 1, 0, 0, 0, 225, 226, 1, 0, 0, 0, 226, 48, 1, 0,
		0, 0, 227, 228, 5, 48, 0, 0, 228, 230, 7, 5, 0, 0, 229, 231, 7, 6, 0, 0,
		230, 229, 1, 0, 0, 0, 231, 232, 1, 0, 0, 0, 232, 230, 1, 0, 0, 0, 232,
		233, 1, 0, 0, 0, 233, 50, 1, 0, 0, 0, 234, 239, 5, 34, 0, 0, 235, 238,
		3, 57, 28, 0, 236, 238, 8, 7, 0, 0, 237, 235, 1, 0, 0, 0, 237, 236, 1,
		0, 0, 0, 238, 241, 1, 0, 0, 0, 239, 237, 1, 0, 0, 0, 239, 240, 1, 0, 0,
		0, 240, 242, 1, 0, 0, 0, 241, 239, 1, 0, 0, 0, 242, 243, 5, 34, 0, 0, 243,
		52, 1, 0, 0, 0, 244, 247, 5, 39, 0, 0, 245, 248, 3, 57, 28, 0, 246, 248,
		8, 8, 0, 0, 247, 245, 1, 0, 0, 0, 247, 246, 1, 0, 0, 0, 248, 249, 1, 0,
		0, 0, 249, 250, 5, 39, 0, 0, 250, 54, 1, 0, 0, 0, 251, 252, 5, 116, 0,
		0, 252, 253, 5, 114, 0, 0, 253, 254, 5, 117, 0, 0, 254, 261, 5, 101, 0,
		0, 255, 256, 5, 102, 0, 0, 256, 257, 5, 97, 0, 0, 257, 258, 5, 108, 0,
		0, 258, 259, 5, 115, 0, 0, 259, 261, 5, 101, 0, 0, 260, 251, 1, 0, 0, 0,
		260, 255, 1, 0, 0, 0, 261, 56, 1, 0, 0, 0, 262, 263, 5, 92, 0, 0, 263,
		264, 7, 9, 0, 0, 264, 58, 1, 0, 0, 0, 265, 266, 5, 73, 0, 0, 266, 267,
		5, 54, 0, 0, 267, 283, 5, 52, 0, 0, 268, 269, 5, 73, 0, 0, 269, 283, 5,
		56, 0, 0, 270, 271, 5, 83, 0, 0, 271, 272, 5, 116, 0, 0, 272, 283, 5, 114,
		0, 0, 273, 274, 5, 70, 0, 0, 274, 275, 5, 108, 0, 0, 275, 276, 5, 111,
		0, 0, 276, 277, 5, 97, 0, 0, 277, 283, 5, 116, 0, 0, 278, 279, 5, 66, 0,
		0, 279, 280, 5, 111, 0, 0, 280, 281, 5, 111, 0, 0, 281, 283, 5, 108, 0,
		0, 282, 265, 1, 0, 0, 0, 282, 268, 1, 0, 0, 0, 282, 270, 1, 0, 0, 0, 282,
		273, 1, 0, 0, 0, 282, 278, 1, 0, 0, 0, 283, 60, 1, 0, 0, 0, 284, 285, 5,
		60, 0, 0, 285, 302, 5, 61, 0, 0, 286, 287, 5, 62, 0, 0, 287, 302, 5, 61,
		0, 0, 288, 289, 5, 33, 0, 0, 289, 302, 5, 61, 0, 0, 290, 291, 5, 61, 0,
		0, 291, 302, 5, 61, 0, 0, 292, 302, 7, 10, 0, 0, 293, 294, 5, 97, 0, 0,
		294, 295, 5, 110, 0, 0, 295, 302, 5, 100, 0, 0, 296, 297, 5, 111, 0, 0,
		297, 302, 5, 114, 0, 0, 298, 299, 5, 110, 0, 0, 299, 300, 5, 111, 0, 0,
		300, 302, 5, 116, 0, 0, 301, 284, 1, 0, 0, 0, 301, 286, 1, 0, 0, 0, 301,
		288, 1, 0, 0, 0, 301, 290, 1, 0, 0, 0, 301, 292, 1, 0, 0, 0, 301, 293,
		1, 0, 0, 0, 301, 296, 1, 0, 0, 0, 301, 298, 1, 0, 0, 0, 302, 62, 1, 0,
		0, 0, 303, 304, 7, 11, 0, 0, 304, 64, 1, 0, 0, 0, 305, 306, 5, 58, 0, 0,
		306, 307, 5, 61, 0, 0, 307, 66, 1, 0, 0, 0, 308, 309, 5, 38, 0, 0, 309,
		68, 1, 0, 0, 0, 310, 311, 5, 116, 0, 0, 311, 312, 5, 121, 0, 0, 312, 313,
		5, 112, 0, 0, 313, 314, 5, 101, 0, 0, 314, 315, 5, 111, 0, 0, 315, 329,
		5, 102, 0, 0, 316, 317, 5, 97, 0, 0, 317, 329, 5, 116, 0, 0, 318, 319,
		5, 115, 0, 0, 319, 320, 5, 101, 0, 0, 320, 329, 5, 116, 0, 0, 321, 322,
		5, 108, 0, 0, 322, 323, 5, 101, 0, 0, 323, 329, 5, 110, 0, 0, 324, 325,
		5, 99, 0, 0, 325, 326, 5, 97, 0, 0, 326, 327, 5, 108, 0, 0, 327, 329, 5,
		108, 0, 0, 328, 310, 1, 0, 0, 0, 328, 316, 1, 0, 0, 0, 328, 318, 1, 0,
		0, 0, 328, 321, 1, 0, 0, 0, 328, 324, 1, 0, 0, 0, 329, 70, 1, 0, 0, 0,
		330, 331, 5, 91, 0, 0, 331, 72, 1, 0, 0, 0, 332, 333, 5, 93, 0, 0, 333,
		74, 1, 0, 0, 0, 334, 335, 5, 97, 0, 0, 335, 336, 5, 114, 0, 0, 336, 337,
		5, 114, 0, 0, 337, 76, 1, 0, 0, 0, 338, 339, 5, 64, 0, 0, 339, 78, 1, 0,
		0, 0, 340, 344, 7, 12, 0, 0, 341, 343, 7, 13, 0, 0, 342, 341, 1, 0, 0,
		0, 343, 346, 1, 0, 0, 0, 344, 342, 1, 0, 0, 0, 344, 345, 1, 0, 0, 0, 345,
		80, 1, 0, 0, 0, 346, 344, 1, 0, 0, 0, 347, 349, 7, 14, 0, 0, 348, 347,
		1, 0, 0, 0, 349, 350, 1, 0, 0, 0, 350, 348, 1, 0, 0, 0, 350, 351, 1, 0,
		0, 0, 351, 352, 1, 0, 0, 0, 352, 353, 6, 40, 0, 0, 353, 82, 1, 0, 0, 0,
		28, 0, 142, 148, 153, 159, 165, 171, 176, 182, 184, 188, 193, 199, 205,
		207, 211, 216, 225, 232, 237, 239, 247, 260, 282, 301, 328, 344, 350, 1,
		6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// StcLexerInit initializes any static state used to implement StcLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewStcLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func StcLexerInit() {
	staticData := &StcLexerLexerStaticData
	staticData.once.Do(stclexerLexerInit)
}

// NewStcLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewStcLexer(input antlr.CharStream) *StcLexer {
	StcLexerInit()
	l := new(StcLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &StcLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Stc.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// StcLexer tokens.
const (
	StcLexerT__0                = 1
	StcLexerT__1                = 2
	StcLexerT__2                = 3
	StcLexerT__3                = 4
	StcLexerT__4                = 5
	StcLexerT__5                = 6
	StcLexerT__6                = 7
	StcLexerT__7                = 8
	StcLexerT__8                = 9
	StcLexerT__9                = 10
	StcLexerT__10               = 11
	StcLexerT__11               = 12
	StcLexerT__12               = 13
	StcLexerT__13               = 14
	StcLexerT__14               = 15
	StcLexerSTACK_PREVENTION    = 16
	StcLexerNUMBER              = 17
	StcLexerSIGNED_NUMBER       = 18
	StcLexerFLOAT               = 19
	StcLexerSIGNED_FLOAT        = 20
	StcLexerFLOAT_E             = 21
	StcLexerSIGNED_FLOAT_E      = 22
	StcLexerBIN_NUMBER          = 23
	StcLexerHEX_NUMBER          = 24
	StcLexerSTRING              = 25
	StcLexerCHAR                = 26
	StcLexerBOOL                = 27
	StcLexerSIMPLE_TYPE         = 28
	StcLexerLOGIC_OPERATOR      = 29
	StcLexerARITHMETIC_OPERATOR = 30
	StcLexerASSIGN_OPERATOR     = 31
	StcLexerREFERENCE_OPERATOR  = 32
	StcLexerBUILD_IN_OPERATOR   = 33
	StcLexerARRAY_OPEN          = 34
	StcLexerARRAY_CLOSE         = 35
	StcLexerARRAY_OPERATOR      = 36
	StcLexerAT                  = 37
	StcLexerID                  = 38
	StcLexerWS                  = 39
)
